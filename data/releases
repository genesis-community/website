{
  "all": [
    {
      "notes": "# Improvements\n\n* Improved lookup command to be able to handle accessing array elements by\n  index or by element hash match (ie `myarray[somekey=specific-value]`)\n\n# Bug Fixes\n\n* Restored `vaulted()` subroutine: fixes error in `vault_path` and \n  `vault_path_and_key`  validation.\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.5",
      "version": "2.6.5"
    },
    {
      "notes": "# Bug Fixes\n\n* Fixed bug with some older kits validating against vault paths and keys.\n\n* `genesis do ...` message of \"Running <addon> addon for <env>\" now prints to\n  STDERR so addon output can be safely piped to other commands.\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.6",
      "version": "2.6.6"
    },
    {
      "notes": "# Bug Fixes\n\n- Handle proxy-injected headers when downloading assets via curl.\n  Some proxies will give back provisional, non-3xx responses to\n  indicate that they are connecting to the requested resource.\n  This no longer confounds genesis.\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.7",
      "version": "2.6.7"
    },
    {
      "notes": "# Improvements\n\n- Certificates in kit.yml can now have subject alt names that\n  are optional, using the new `${maybe:params.name}` syntax.\n  If `params.name` isn't found in the environment file(s) then\n  that SAN entry will be skipped entirely.\n\n  This allows Kit Authors to generate certificates with\n  user-provided external domains, optionally.\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.8",
      "version": "2.6.8"
    },
    {
      "notes": "# Bug Fixes\n\n- `genesis embed` now properly handles packed (2.6+) genesis\n  distributions, and instead of just copying the extracted driver\n  script, now embeds the packed archive binary.  This makes the\n  pipelines a lot happier.\n\n- `genesis repipe` now properly hides / unhides pipelines per\n  configuration.  All this talk of pipelines and we misspelled\n  piepline.\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.9",
      "version": "2.6.9"
    },
    {
      "notes": "# Bug Fixes\n\n- Accessing a Vault over HTTP/2 now works. Previously our regex was strictly\n  checking for HTTP/x.x connections. We've losened it to look for HTTP/x.x or\n  HTTP/x.\n\n- Genesis concourse pipelines now downloads the cloud configuration from the\n  bosh director. Previously, pipelines would fail to deploy because the deploy\n  didn't have a cloud-config to base spruce merges off of.\n\n- Genesis now ensures that `GENESIS_CALLBACK_BIN` is a fully-qualified path.\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.10",
      "version": "2.6.10"
    },
    {
      "notes": "# Improvements\n\n* Kits can now check that the required number of static_ips in each network\n  are available using the `cloud_config_needs static_ips <network_name>\n  <count>`\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.11",
      "version": "2.6.11"
    },
    {
      "notes": "# Bug Fixes\n\n- CI pipelines no longer bail out when trying to determine their\n  BOSH alias, because of some unfortunate interactions.\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.12",
      "version": "2.6.12"
    },
    {
      "notes": "# Feature: Better Integration of Safe\n\nSince inception, Genesis has used your local `safe` target to determine what\nvault is being used for the environment secrets.  If you only have a single\nvault, this is fine.\n\nHowever, some systems have multiple `safe` targets, and if you switch targets,\nyou may inadvertantly try to use a vault where your environment's targets are\nnot located, or worse, write, delete or overwrite secrets in the wrong\nvault.\n\nFurthermore, when repositories are used on more than one system, there is no\nmechanism to convey what `safe` target needs to be used for that repository.\n\nAs of this release, you can now _register_ the correct vault with a deployment\nrepository, so that it always uses that vault, regardless of what the local\nsafe configuration has as the target.\n\nTo provide this behaviour, the following changes have been made:\n\n- `genesis init` will ask for the user to select a vault from their safe\n  targets list.  Alternatively, the correct safe target can be passed in via\n  the --vault <target> option.\n\n- `genesis new` no longer prompts for the vault when creating a new\n  environment.\n\n- When using a repository on a new system, if the registered vault is not\n  known, or if there are multiple targets for the registered vault url,\n  instructions will be provided instructing the user how to ensure the\n  correct vault is available.\n\n- To view and manage what vault is registered, the `genesis secrets-provider`\n  command is used.  Without any arguments it displays the status of the\n  registered vault.\n\n```\n$ genesis secrets-provider\n\nSecrets provider for concourse deployment at /path/to/concourse-deployments:\n         Type: Safe/Vault\n          URL: http://127.0.0.1:8201 (insecure)\n  Local Alias: toughened-coffer\n       Status: ok\n```\n\n  With the -i|--interactive option, it will provide you with the same menu of\n  valid safe targets that is presented when creating a new repository.  The\n  selected target will then be registered to the repository.  Similarly, you\n  can skip the menu and just specify the target name or full url as an\n  argument.\n\n  Finally, the -c|--clear option can be used to remove the registered safe,\n  and put the deployment repository in Legacy mode.  While this is highly not\n  recommended, if you **need** to use the old model of relying on the system-\n  targetted safe, this can be used.\n\n- The deployment repository configuration file `.genesis/config` is updated\n  when `genesis secrets-provider` is called with an argument, and should not\n  be edited by hand.  If there is a use-case for need to change this file\n  manually, please open an issue.\n\n- You must have at least one safe target with a unique url.  Normally, when\n  initially deploying your first BOSH and Vault using genesis, you will stand\n  up a local vault using `safe local -m`, then once the permanent Vault is in\n  place, you will move your secrets to that Vault, and then update your\n  registered secrets provider to point to the permanent Vault.\n\n  More information on the design of and reason for this change can be found at\n  https://trello.com/c/n4WhOC6p\n\n**Note on Legacy Mode:**\n\nAll existing deployment repositories will run in Legacy mode until you use\n`genesis secrets-provider` to register a vault with them.  While in Legacy\nmode, the --vault option is valid for the `new`, `check-secrets`, `add-secrets`,\n`rotate-secrets` and `secrets` subcommands to specify the safe target you want\nto use.  The `new` subcommand will error if in Legacy mode and no `--vault`\noption is provided.  All other command will use whatever the current vault\nbeing used by the system for determining what vault to access.\n\n**Note on valid safe targets:**\n\nFor a safe target to qualify for a registered vault, it must be the\nonly target that uses its url (this is due to how safe associates the\nauthentication token).  If you have multiple aliases for a given URL, remove\nthe duplicates, or if you need separate alais, use /etc/hosts to create unique\ndomain names that can be used as the host.\n\n# Improvements\n\n- Creating new environment will now warn you that existing secrets exist under\n  the path set for the environment.  You will then be prompted to allow them\n  to be deleted, or abort the creation of the environment.  This serves two\n  purposes: It informs you in case you're accidentally about to overwrite\n  existing secrets, and ensures there are no out-dated secrets left around in\n  the case that you intended to over-write them.\n\n- Reorganized environment file for future improvements.  Introduced new\n  `genesis` top-level key to hold Genesis-level values, leaving `params` for\n  kit-level values.  This moves `params.env` to `genesis.env`, and\n  `params.vault` to `genesis.secrets_path`.  Existing kits that make use of\n  `params.env` will continue to be supported (see below in Kit Authorship\n  Improvments)\n\n- `genesis download` is now `genesis fetch-kit`, and supports fetching new\n  versions of local kits without having to specify any arguments.\n\n- Cleaned up check and deployment interface to move towards a more standardized\n  output.\n\n- BOSH connection checks now first check if the host and port are reachable\n  and listening rather than hanging while attempting to connect.\n\n# Kit Authorship Improvements\n\n- Improved validation when compiling kits.\n\n  **Breaking Change:**  `genesis compile-kit` will now error if you are using\n  legacy keywords in your kit.yml, such as `subkits` and `params`.  If you are\n  maintaining a legacy kit and need to compile a new version, you may use the\n  `-f` option to force the compilation, but be warned, this will bypass all\n  the validation.  It is recommended instead to bring your kit up to the\n  latest standards.\n\n- Kit's `genesis_version_minimum` now means both _I need this version of\n  Genesis_ (original intention) as well as _I fully support this verison of\n  Genesis._ This means it can be used to deprecate or protect from deprecation\n  features that are introduced in new versions of Genesis.\n\n  For example, kits that don't specify a `genesis_version_minimum` of 2.6.13\n  will not be expected to support the new `genesis.env` environment parameter,\n  so Genesis will auto-populate the `params.env` for them, ensuring that any\n  reliance on this does not break existing kits.\n\n- Added `genesis_config_block` helper to print the `genesis:` block to standard\n  output, so it can be redirected into the environment file being constructed\n  by the `new` hook.  Use this instead of constructing it yourself to ensure\n  future compatability without having to update your kit (further changes in\n  this area are coming).\n\n- Added `bullet` hooks helper to print green checkmark (`bullet \"√\"`) or red X\n  (`bullet \"x\"`) in the same style that `genesis check-secrets` uses.\n\n- `prompt_for line` helper can now accept an empty response by using the\n  `--default ''` option.\n\n- Improved `cloud_config_needs`:\n\n  - Now uses same green checkmark/red x that check-secrets uses. _(uses\n    `bullet` helper above)_\n\n  - `static_ip` checks for both valid static ip ranges as well as sufficient\n    counts.\n\n- Added the following environment variables for use in hooks:\n\n  - `SAFE_TARGET` - while not to be directly used, this ensures all safe calls\n  will target the environments registered vault.\n\n  - `GENESIS_TOPDIR` - for kits that alter $HOME, this will point back to the\n    Genesis top directory (usually ~/.geese) even after $HOME is changed.\n\n# Kit Deprecations\n\n- Setting your kit to use `genesis_version_minimum` of 2.6.13 (or higher) have\n  the following changes.\n\n  - The root path, env name and vault prefix will no longer be provided as\n    positional arguments to the `hooks/new` script.  Instead, the script must\n    make use of the `GENESIS_ROOT`, `GENESIS_ENVIRONMENT`, and\n    `GENESIS_SECRETS_PATH` environment variables respectively.\n\n  - `params.env` will no longer be provided in the environment file stack.\n\n# Bug Fixes\n\n- `genesis deploy` checks presence of secrets prior to trying to build a\n  manifest\n\n- CA Certs specified in kits honour `valid_for` and `names` properties.  Names\n  are added as Subject Alternative Names.\n\n- Fixed error in minimum Genesis version specification in generated template\n  and validation.\n\n# Developer Support\n\n- Improved output for trace and debug output so its move visually obvious.\n\n- Added `dump_var` function that will dump the contents of one or more\n  variables when in debug or trace mode (as per Data::Dumper)\n\n- Added `dump_stack` function that will dump the stack trace when in debug or\n  trace mode.\n\n- Trace and debug output will always be in color, even if redirect.  To turn\n  off color, use --no-color or set NOCOLOR environment variable to 'y'\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.13",
      "version": "2.6.13"
    },
    {
      "notes": "# Improvements\n\n- `prompt_for` not treats any non-option arguments as individual lines, making\n  it easy to have multiple-line prompts in BASH.\n\n# Bug Fixes\n\n- Temporary directory for `offer_environment_editor` helper now works on Linux\n- Fixed misnamed method call in `ci-pipeline-deploy`\n- Updated ci pipeline to resolve cyclic runaway on rc version bumps\n\n# Software Updates\n\n- Bumped dependency on `spruce` to 1.20.0 to support kv v2 backends.\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.14",
      "version": "2.6.14"
    },
    {
      "notes": "# Feature: Better Integration of Safe\n\nSince inception, Genesis has used your local `safe` target to determine what\nvault is being used for the environment secrets.  If you only have a single\nvault, this is fine.\n\nHowever, some systems have multiple `safe` targets, and if you switch targets,\nyou may inadvertantly try to use a vault where your environment's targets are\nnot located, or worse, write, delete or overwrite secrets in the wrong\nvault.\n\nFurthermore, when repositories are used on more than one system, there is no\nmechanism to convey what `safe` target needs to be used for that repository.\n\nAs of this release, you can now _register_ the correct vault with a deployment\nrepository, so that it always uses that vault, regardless of what the local\nsafe configuration has as the target.\n\nTo provide this behaviour, the following changes have been made:\n\n- `genesis init` will ask for the user to select a vault from their safe\n  targets list.  Alternatively, the correct safe target can be passed in via\n  the --vault <target> option.\n\n- `genesis new` no longer prompts for the vault when creating a new\n  environment.\n\n- When using a repository on a new system, if the registered vault is not\n  known, or if there are multiple targets for the registered vault url,\n  instructions will be provided instructing the user how to ensure the\n  correct vault is available.\n\n- To view and manage what vault is registered, the `genesis secrets-provider`\n  command is used.  Without any arguments it displays the status of the\n  registered vault.\n\n```\n$ genesis secrets-provider\n\nSecrets provider for concourse deployment at /path/to/concourse-deployments:\n         Type: Safe/Vault\n          URL: http://127.0.0.1:8201 (insecure)\n  Local Alias: toughened-coffer\n       Status: ok\n```\n\n  With the -i|--interactive option, it will provide you with the same menu of\n  valid safe targets that is presented when creating a new repository.  The\n  selected target will then be registered to the repository.  Similarly, you\n  can skip the menu and just specify the target name or full url as an\n  argument.\n\n  Finally, the -c|--clear option can be used to remove the registered safe,\n  and put the deployment repository in Legacy mode.  While this is highly not\n  recommended, if you **need** to use the old model of relying on the system-\n  targetted safe, this can be used.\n\n- The deployment repository configuration file `.genesis/config` is updated\n  when `genesis secrets-provider` is called with an argument, and should not\n  be edited by hand.  If there is a use-case for need to change this file\n  manually, please open an issue.\n\n- You must have at least one safe target with a unique url.  Normally, when\n  initially deploying your first BOSH and Vault using genesis, you will stand\n  up a local vault using `safe local -m`, then once the permanent Vault is in\n  place, you will move your secrets to that Vault, and then update your\n  registered secrets provider to point to the permanent Vault.\n\n  More information on the design of and reason for this change can be found at\n  https://trello.com/c/n4WhOC6p\n\n**Note on Legacy Mode:**\n\nAll existing deployment repositories will run in Legacy mode until you use\n`genesis secrets-provider` to register a vault with them.  While in Legacy\nmode, the --vault option is valid for the `new`, `check-secrets`, `add-secrets`,\n`rotate-secrets` and `secrets` subcommands to specify the safe target you want\nto use.  The `new` subcommand will error if in Legacy mode and no `--vault`\noption is provided.  All other command will use whatever the current vault\nbeing used by the system for determining what vault to access.\n\n**Note on valid safe targets:**\n\nFor a safe target to qualify for a registered vault, it must be the\nonly target that uses its url (this is due to how safe associates the\nauthentication token).  If you have multiple aliases for a given URL, remove\nthe duplicates, or if you need separate alais, use /etc/hosts to create unique\ndomain names that can be used as the host.\n\n# Improvements\n\n- Creating new environment will now warn you that existing secrets exist under\n  the path set for the environment.  You will then be prompted to allow them\n  to be deleted, or abort the creation of the environment.  This serves two\n  purposes: It informs you in case you're accidentally about to overwrite\n  existing secrets, and ensures there are no out-dated secrets left around in\n  the case that you intended to over-write them.\n\n- Reorganized environment file for future improvements.  Introduced new\n  `genesis` top-level key to hold Genesis-level values, leaving `params` for\n  kit-level values.  This moves `params.env` to `genesis.env`, and\n  `params.vault` to `genesis.secrets_path`.  Existing kits that make use of\n  `params.env` will continue to be supported (see below in Kit Authorship\n  Improvments)\n\n- `genesis download` is now `genesis fetch-kit`, and supports fetching new\n  versions of local kits without having to specify any arguments.\n\n- Cleaned up check and deployment interface to move towards a more standardized\n  output.\n\n- BOSH connection checks now first check if the host and port are reachable\n  and listening rather than hanging while attempting to connect.\n\n# Kit Authorship Improvements\n\n- Improved validation when compiling kits.\n\n  **Breaking Change:**  `genesis compile-kit` will now error if you are using\n  legacy keywords in your kit.yml, such as `subkits` and `params`.  If you are\n  maintaining a legacy kit and need to compile a new version, you may use the\n  `-f` option to force the compilation, but be warned, this will bypass all\n  the validation.  It is recommended instead to bring your kit up to the\n  latest standards.\n\n- Kit's `genesis_version_minimum` now means both _I need this version of\n  Genesis_ (original intention) as well as _I fully support this verison of\n  Genesis._ This means it can be used to deprecate or protect from deprecation\n  features that are introduced in new versions of Genesis.\n\n  For example, kits that don't specify a `genesis_version_minimum` of 2.6.13\n  will not be expected to support the new `genesis.env` environment parameter,\n  so Genesis will auto-populate the `params.env` for them, ensuring that any\n  reliance on this does not break existing kits.\n\n- Added `genesis_config_block` helper to print the `genesis:` block to standard\n  output, so it can be redirected into the environment file being constructed\n  by the `new` hook.  Use this instead of constructing it yourself to ensure\n  future compatability without having to update your kit (further changes in\n  this area are coming).\n\n- Added `bullet` hooks helper to print green checkmark (`bullet \"√\"`) or red X\n  (`bullet \"x\"`) in the same style that `genesis check-secrets` uses.\n\n- `prompt_for line` helper can now accept an empty response by using the\n  `--default ''` option.\n\n- Improved `cloud_config_needs`:\n\n  - Now uses same green checkmark/red x that check-secrets uses. _(uses\n    `bullet` helper above)_\n\n  - `static_ip` checks for both valid static ip ranges as well as sufficient\n    counts.\n\n- Added the following environment variables for use in hooks:\n\n  - `SAFE_TARGET` - while not to be directly used, this ensures all safe calls\n  will target the environments registered vault.\n\n  - `GENESIS_TOPDIR` - for kits that alter $HOME, this will point back to the\n    Genesis top directory (usually ~/.geese) even after $HOME is changed.\n\n# Kit Deprecations\n\n- Setting your kit to use `genesis_version_minimum` of 2.6.13 (or higher) have\n  the following changes.\n\n  - The root path, env name and vault prefix will no longer be provided as\n    positional arguments to the `hooks/new` script.  Instead, the script must\n    make use of the `GENESIS_ROOT`, `GENESIS_ENVIRONMENT`, and\n    `GENESIS_SECRETS_PATH` environment variables respectively.\n\n  - `params.env` will no longer be provided in the environment file stack.\n\n# Bug Fixes\n\n- `genesis deploy` checks presence of secrets prior to trying to build a\n  manifest\n\n- CA Certs specified in kits honour `valid_for` and `names` properties.  Names\n  are added as Subject Alternative Names.\n\n- Fixed error in minimum Genesis version specification in generated template\n  and validation.\n\n# Developer Support\n\n- Improved output for trace and debug output so its move visually obvious.\n\n- Added `dump_var` function that will dump the contents of one or more\n  variables when in debug or trace mode (as per Data::Dumper)\n\n- Added `dump_stack` function that will dump the stack trace when in debug or\n  trace mode.\n\n- Trace and debug output will always be in color, even if redirect.  To turn\n  off color, use --no-color or set NOCOLOR environment variable to 'y'\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.13",
      "version": "2.6.13"
    },
    {
      "notes": "# Bug Fixes\n\n- Fixes code-order bug in `ci-pipeline-deploy` that was introduced in v2.6.13\n  that caused an invalid `.saferc` that was missing the vault token to be used\n  in the pipeline.\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.15",
      "version": "2.6.15"
    },
    {
      "notes": "# Bug Fixes\n\n- Fixes error in ci-pipeline-deploy when skip verify is false\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.16",
      "version": "2.6.16"
    },
    {
      "notes": "# Administrative Release Only\n\nThere are no functional changes in this release.  It is a re-release to\njumpstart some CI/CD pipelines that have a hard time repacking old versions of\nthings; we changed GitHub orgs and it confused that particular pipeline\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.17",
      "version": "2.6.17"
    },
    {
      "notes": "# New Feature: groups in pipeline config\n\nIt supports grouping in pipeline config file, `genesis repipe` will generate groups\naccordingly.\n",
      "url": "https://github.com/starkandwayne/genesis/releases/tag/v2.6.18",
      "version": "2.6.18"
    }
  ],
  "latest": "2.6.18"
}
